# Imports
import logging
import aiogram 
import time
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# Token
bot = Bot(token='')
dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

@dp.message_handler(text=['Module vk_bottle not found'])
async def stats(message):
	await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏, pip install vk_bottle")

@dp.message_handler(text=['Module rich not found'])
async def stats(message):
	await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏, pip install rich")
    
@dp.message_handler(text=['DEBUG:urllib3.connectionpool:Starting new HTTPS conection'])
async def stats(message):
	await message.answer("–î–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ –∏–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–∏–µ –Ω–æ–≤–æ–≥–æ HTTPS –ø–æ–¥–ª—é—á–µ–Ω–∏—è, –Ω–æ –µ—Å–ª–∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –±–æ—Ç–Ω–µ—Ç–µ")    

@dp.message_handler(text=['Termux'])
async def stats(message):
	await message.answer("–° –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø–æ—Ä, —É Google –ø–æ–º–µ–Ω—è–ª–∞—Å—å –ø–æ–ª–∏—Ç–∏–∫–∞ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏. –ü–æ—ç—Ç–æ–º—É, —Ä–µ–∫–æ–º—É–Ω–¥—É—é —Å–∫–∞—á–∏–≤–∞—Ç—å Termux —Å F-Droid –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ä–∞–±–æ—Ç–æ–π —Å –ø–∞–º—è—Ç—å—é –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")	

inline_btn_1 = InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É', url="http://t.me/PeperHelperBot?startgroup=start")
inline_kb1 = InlineKeyboardMarkup().add(inline_btn_1)

#bot.py
@dp.message_handler(commands=['start'])
async def process_command_1(message: types.Message):
    await message.answer(f"<b>üëãüèª –ü—Ä–∏–≤–µ—Ç, —è Pepe Helper! –û—Ç–≤–µ—á—É –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –±–æ—Ç–Ω–µ—Ç–∞!</b>", parse_mode='html', reply_markup=inline_kb1)

@dp.message_handler(commands=['guide'])
async def process_command_1(message: types.Message):
    await message.answer(f"<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–Ω–µ—Ç!</b>", parse_mode='html', reply_markup=inline_kb1)

@dp.message_handler(commands=['ping', '–ø–∏–Ω–≥', '.'], commands_prefix=["/", "!"])
async def ping(message: types.Message):
    a = time.time()
    bot_msg = await message.answer(f'<b>‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏–Ω–≥–∞....</b>', parse_mode='html')
    if bot_msg:
        b = time.time()
        await bot_msg.edit_text(f'<b>‚è± –ü–∏–Ω–≥: {round((b - a) * 1000)} ms</b>', parse_mode='html')

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)


